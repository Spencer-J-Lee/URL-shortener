#!/usr/bin/env ruby

# Methods

def get_user(email)
	User.find_by(email: email)
end

def get_email
	get_email_prompt
	email = gets.chomp
	
	until valid_email?(email)
		get_email_error
		email = gets.chomp 
	end

	email
end

def valid_email?(email)
	User.exists?(email: email)
end

def visit_or_create(user)
	get_action == 1 ? visit_url(user) : create_url(user)
end

def visit_url(user)
	Visit.record_visit!(user, get_shortened_url)
end

def create_url(user)
	ShortenedUrl.create_from_user_and_url(user, get_long_url)
end

def get_long_url
	get_long_url_prompt
	long_url = gets.chomp

	until valid_long_url?(long_url)
		get_long_url_error
		long_url = gets.chomp
	end
	
	long_url
end

def valid_long_url?(long_url)
	long_url.include?('www.')
end

def get_action
	get_action_prompt
	action = gets.to_i

	until valid_action?(action)
		get_action_error
		action = gets.to_i
	end

	action
end

def valid_action?(action)
	[1, 2].include?(action)
end

def get_shortened_url
	get_shortened_url_prompt
	short_url = gets.chomp

	until valid_url?(short_url)
		get_shortened_url_error
		short_url = gets.chomp
	end

	ShortenedUrl.find_by(short_url: short_url)
end

def valid_url?(url)
	ShortenedUrl.exists?(short_url: url)
end

def get_email_prompt
	puts  "Input your email:"
	print "> "
end

def get_email_error
	puts
	puts  "[Error] Email is not in the database."
	puts  "Enter a valid email:"
	print "> "
end

def get_action_prompt
	puts  "Choose an option:"
	puts  "1 | Visit URL"
	puts  "2 | Create URL"
	print "> "
end

def get_action_error
	puts
	puts  "[Error] Not a valid action."
	puts  "Enter 1 or 2:"
	print "> "
end

def get_shortened_url_prompt
	puts  "Enter your short URL:"
	print "> "
end

def get_shortened_url_error
	puts
	puts  "[Error] URL not in the database."
	puts  "Enter a valid URL:"
	print "> "
end

def get_long_url_prompt
	puts  "Enter your long URL:"
	print "> "
end

def get_long_url_error
	puts
	puts  "[Error] Not a valid URL."
	puts  "Enter a valid URL:"
	print "> "
end

# Script

system 'clear'

email = get_email
user  = get_user(email)

visit_or_create(user)